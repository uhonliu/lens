variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn
  AZURE_CACHE_FOLDER: $(Pipeline.Workspace)/.azure-cache
pr:
  - master
  - releases/*
trigger:
  branches:
    include:
    - '*'
  tags:
    include:
    - "*"
jobs:
  - job: macOS
    pool:
      vmImage: macOS-10.14
    strategy:
      matrix:
        node_12.x:
          node_version: 12.x
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: $(node_version)
        displayName: Install Node.js
      - task: CacheBeta@0
        inputs:
          key: cache | $(Agent.OS) | yarn.lock
          path: $(AZURE_CACHE_FOLDER)
          cacheHitVar: CACHE_RESTORED
        displayName: Cache Yarn packages
      - bash: |
          mkdir -p "$YARN_CACHE_FOLDER"
          tar -xzf "$AZURE_CACHE_FOLDER/yarn-cache.tar.gz" -C /
        displayName: "Unpack cache"
        condition: eq(variables.CACHE_RESTORED, 'true')
      - script: make deps
        displayName: Install dependencies
      - script: make lint
        displayName: Lint
      - script: make test
        displayName: Run tests
      - script: make build
        displayName: Build
        env:
          APPLEID: $(APPLEID)
          APPLEIDPASS: $(APPLEIDPASS)
          CSC_LINK: $(CSC_LINK)
          CSC_KEY_PASSWORD: $(CSC_KEY_PASSWORD)
          GH_TOKEN: $(GH_TOKEN)
      - bash: |
          mkdir -p "$AZURE_CACHE_FOLDER"
          tar -czf "$AZURE_CACHE_FOLDER/yarn-cache.tar.gz" "$YARN_CACHE_FOLDER"
        displayName: Pack cache
